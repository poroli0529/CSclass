using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Week02Proj01
{
    public partial class FormMain: Form
    { // : Form은 상속을 의미한다. Form을 상속을 받아서 formain을 
        public FormMain()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBox3_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBox4_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBox5_TextChanged(object sender, EventArgs e)
        {

        }

        private void button10_Click(object sender, EventArgs e)
        {

        }

        private void button11_Click(object sender, EventArgs e)
        {

        }

        private void button16_Click(object sender, EventArgs e)
        {

        }

        private void button12_Click(object sender, EventArgs e)
        {

        }

        private void button17_Click(object sender, EventArgs e)
        {

        }

        private void button15_Click(object sender, EventArgs e)
        {

        }

        private void button9_Click(object sender, EventArgs e)
        {

        }

        private void button14_Click(object sender, EventArgs e)
        {

        }

        private void button13_Click(object sender, EventArgs e)
        {

        }

        private void button8_Click(object sender, EventArgs e)
        {
            
            int data1 = int.Parse(tbxInput1.Text);
            float data2 = (float)double.Parse(tbxInput2.Text);
            long data3 = long.Parse(tbxInput3.Text);
            int data4 = (int)data3;

            lblResult.Text += "\r\n";
            lblResult.Text += '\n';
            // (int)1.9 + (int)1.6 => 2
            long result2 = data1 + (long)data2 + data3 + data4;
            lblResult.Text = result2.ToString();

            lblResult.Text += "\r\n";
            lblResult.Text += '\n';
            // (int)(1.9 + 1.6) => 3
            long result3 = (long)(data1 + data2 + data3 + data4);
            lblResult.Text = result3.ToString();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void btnOutput01_Click(object sender, EventArgs e)
        {
            bool isToggle = chkToggle.Checked; // true or false 리턴
            //bool isToggle = true or false 만 사용가능 0/1 불가능!;
            if (isToggle) { // C# , JAVA 에서는 0,1로 true, false를 사용 불가능
                string data1 = tbxInput1.Text;
                string data2 = tbxInput2.Text;
                string result = data1 + data2; // 문자열연결연산자
                lblResult.Text = "가감 :" + result;
            }
            else
            {
                // 자료형 변환 int.Parse() / .ToString()
                // C#의 모든 자료형은 string으로 변환가능 
                int data1 = int.Parse(tbxInput1.Text);
                int data2 = int.Parse(tbxInput2.Text);
                int result = data1 + data2; // 산술연산자
                lblResult.Text = result.ToString();
            }
         }

        private void btnOutput02_Click(object sender, EventArgs e)
        {
            bool ans = chkToggle.Checked;
            if(ans == false)
            {
                int data1 = int.Parse(tbxInput1.Text);
                int data2 = int.Parse(tbxInput2.Text);
                int result = data1 + data2; // 산술연산자
                lblResult.Text = "더하기  :  " +  result.ToString();
            }
            else
            {
                int data1 = int.Parse(tbxInput1.Text);
                int data2 = int.Parse(tbxInput2.Text);
                int result = data1 - data2; // 산술연산자
                lblResult.Text = "빼기 : " + result;
                // 문자열 + 숫자 => 문자열 연결 연산자로 동작
            }
        }

        private void btnOutput03_Click(object sender, EventArgs e)
        {// 가감 3
            // bool ans = chkToggle.Checked;
            double data1 = double.Parse(tbxInput1.Text);
            double data2 = double.Parse(tbxInput2.Text);
            if (chkToggle.Checked == false)
            {
               
                double result = data1 + data2; // 산술연산자
                lblResult.Text = string.Format("더하기  : {0} ", result);
                //{0} 안에 result 들어가나? 
            }
            else
            {
                double result = data1 - data2; // 산술연산자
                lblResult.Text = $"빼기 : {result}"; // 문자열보간법
                
                
                // 문자열 + 숫자 => 문자열 연결 연산자로 동작
                // $"빼기 : {result}"; // 문자열보간법
                // ==  string.Format("더하기  : {0} ", result);
                /* 문자열 연산을 하면 많을 수록 문자열연결연산자는 효율이 떨어진다.
                 그래서 1. 문자열 보간법을 사용하게 됬고 이것은 문자열 연산이 많을
                시에는 전자의 방법보다 더 효율적이다.*/
            }
        }

        private void btnOutput04_Click(object sender, EventArgs e)
        {// 가감4

        }

        private void btnOutput05_Click(object sender, EventArgs e)
        { // 문자와 문자열

            lblResult.Text = tbxInput1.Text;
            lblResult.Text += Environment.NewLine; // "\r\n , \n"
            // lblResult.Text = Environment.NewLine;
            // 문자열         =   문자열   => 오류 X

            lblResult.Text += tbxInput1.Text.GetType();
            //lblResult.Text = tbxInput1.Text.GetType();
            //GetType() : type반환 메소드
            //문자열 + type = > 오류 발생!

            lblResult.Text += Environment.NewLine;
            lblResult.Text += tbxInput1.Text[0]; // 문자열 += 문자
            //lblResult.Text = tbxInput1.Text[0]; // 문자
            lblResult.Text += Environment.NewLine;
            lblResult.Text += tbxInput1.Text[0].GetType();

            lblResult.Text += Environment.NewLine;
            char test1 = tbxInput1.Text[0];
            //c/c++언어 : 1바이트(ascii) 
            //C#/JAVA : 2바이트(unicode)
            byte result1 = (byte)test1; // 1바이트 부호 미지원 정수형 
            sbyte result4 = (sbyte)test1; // 1바이트 부호 지원 정수형 
            // 큰 <> 작은 : 에러 발생! 그래서 명시적형변환으로 1byte버리고 
            //삽입하겠다고 컴퓨터에 선언
            short result2 = (short)test1; // 2바이트 부호지원 정수형
            ushort result3 = test1;       // 2바이트 부호미지원 정수형


            lblResult.Text += $"{test1},{result1},{result2},{result3},{result4}";
        }
    }
        
}
